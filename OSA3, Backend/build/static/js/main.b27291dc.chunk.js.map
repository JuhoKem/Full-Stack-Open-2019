{"version":3,"sources":["components/PersonForm.js","components/PersonsToShow.js","components/Filter.js","services/server.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","newName","newNumber","addRecod","handleNameChange","handleNumberChange","onSubmit","value","onChange","type","PersonsToShow","persons","filter","handleDelete","person","name","toLowerCase","includes","map","key","number","onClick","id","Filter","handleFilterChange","url","axios","get","RecordObject","post","delete","put","Notification","message","errorStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","App","useState","setPersons","setNewName","setNewNumber","setFilter","errorMessage","SetErrorMessage","errorColor","setErrorColor","useEffect","console","log","Server","then","response","data","length","event","target","preventDefault","find","p","window","confirm","setTimeout","catch","error","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b27291dc.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonForm = ({newName, newNumber, addRecod, handleNameChange, handleNumberChange}) => {\n    return (\n        <form onSubmit={addRecod}>\n        \n        <div> name: <input value={newName} onChange={handleNameChange}/> </div>\n        <div> number: <input value={newNumber} onChange={handleNumberChange}/> </div>\n        <div>\n          <button type=\"submit\" >add</button>\n        </div>\n      </form>\n    )\n\n}\n\nexport default PersonForm","import React from 'react'\n\nconst PersonsToShow = ({persons, filter, handleDelete}) => {\n    const showNames = persons.filter(person => person.name.toLowerCase().includes(filter))\n\n    // handleDelete palauttaa id:n Appiin\n    return (showNames.map(person => \n        <div key={person.name}>{person.name} {person.number} <button onClick={() => handleDelete(person.id)} >delete</button> </div>)\n    )\n}\n\nexport default PersonsToShow","import React from 'react'\n\nconst Filter = ({handleFilterChange}) => {\n    return (\n        <div>filter shown with<input onChange={handleFilterChange}/></div>\n    )\n} \n\nexport default Filter","import axios from 'axios'\n\n// pidempi versio on paikallista testausta varten\n//const url = 'http://localhost:3001/api/persons'\nconst url = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(url)\n//  olisi voinut siirtää alla olevat tapahtumakäsittelijät tänne    \n//  .then(response => {\n//  console.log('promise fulfilled')\n}\n\nconst create = RecordObject => {\n    return axios.post(url, RecordObject)\n}\n\nconst update = (id, RecordObject) => {\n    return axios.put(`${url}/${id}`, RecordObject)\n}\n\nconst remove = (id) => {\n    //console.log('ID: ', url,id);\n    return axios.delete(`${url}/${id}`)\n}\n\nexport default {\n    getAll,\n    create,\n    remove,\n    update\n}\n\n// Olion määrittelyssä vasemmalla puolella olevat nimet tarkoittavat eksportoitavan olion kenttiä, \n// kun taas oikealla puolella olevat nimet ovat moduulin sisällä määriteltyjä muuttujia.\n/*\nexport default {\n    getAll : getAll,\n    create : create,\n    update : update\n}\n*/","import React from 'react'\n\nconst Notification = ({message, type}) => {\n    //console.log('ERROR type: ', type);\n    if (message === null) {\n      return null\n    }\n  \n      // CSS\n      const errorStyle = {\n        // tässä valitaan virheilmoituksen väri\n        color: type === 'ok' ? 'green' : 'red',\n        background: 'rgb(236, 234, 234)',\n        fontSize: 15,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n      \n      }\n    return (\n      <div style={errorStyle}>\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport PersonsToShow from './components/PersonsToShow'\nimport Filter from './components/Filter'\nimport Server from './services/server'\nimport Notification from './components/Notification'\n\n// käynnistä npm run server ja npm start eri terminaaleissa\n\nconst App = () => {\n    \nconst [persons, setPersons] = useState([])\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ errorMessage, SetErrorMessage ] = useState(null)\n  const [ errorColor, setErrorColor ] = useState('')\n\n  const addRecod = (event) => {\n    event.preventDefault() // estää sivua latautumasta - menettää kaikki tiedot, jos sivu latautuu\n\n    if (persons.find(p => p.name === newName)) {\n\n        // pop-up ikkuna\n        if (window.confirm(`\"${newName}\" is already added to phonebook. Replace the old number with the new one?`)) {\n          const person = persons.find(p => p.name === newName)\n          const RecordObject = {\n            name: newName,\n            number: newNumber\n        }\n          // tietueen muokkaus\n          //console.log('UPDATE ', RecordObject)\n          Server\n            .update(person.id, RecordObject)\n            .then(response => {\n              //console.log('responce:', response.data);\n              //setPersons(persons.concat(response.data))\n              setNewName('')\n              setNewNumber('')\n              setPersons(persons.map(p => p.id !== person.id ? p : response.data))\n              SetErrorMessage(`\"${person.name}\" updated to phonebook`)\n              setErrorColor('ok') // asetetaan väri, ok - vihreä, kaikki muu punaista\n              setTimeout(() => {\n                SetErrorMessage(null)}, 5000)\n            })\n            .catch(error => {\n              console.log('ERROR');\n              SetErrorMessage(`Information of \"${person.name}\" has already been removed from server`)\n              setErrorColor('not ok')\n              setTimeout(() => {\n                SetErrorMessage(null)}, 5000)\n                // olemattoman tietueen poisto\n                setPersons(persons.filter(p => p.id !== person.id))\n            })\n        }\n        setNewName('')\n        setNewNumber('')\n    } \n    else {\n        const RecordObject = {\n            name: newName,\n            number: newNumber,\n        }\n        console.log('button cliked', event.target)\n        setPersons(persons.concat(RecordObject))\n        setNewName('')\n        setNewNumber('')\n\n        // tietueen lisäys\n        Server\n          .create(RecordObject)\n          .then(response => { \n            //console.log('RECORD OBJECT', response);\n            // asetetaan tilaan palvelimelta saatu data\n            setPersons(persons.concat(response.data))\n            SetErrorMessage(`\"${RecordObject.name}\" added to phonebook`)\n            setErrorColor('ok')\n            setTimeout(() => {\n              SetErrorMessage(null)}, 5000)\n          })\n          .catch(error => {\n            SetErrorMessage(`${error.response.data.error}`)\n            setErrorColor('not ok')\n            setTimeout(() => {\n              SetErrorMessage(null)}, 5000)\n            console.log('front-end: Validation error', error.response.data);\n          })\n    }\n  }\n  // tietueen poisto\n  const handleDelete = (id) => {\n    const person = persons.find(p => p.id === id)\n    if (window.confirm(`Want to delete \"${person.name}\"`)) {\n      console.log('handleDelete, id:', id);\n      Server\n          .remove(id)\n          .then(response => {\n              //console.log('REMOVE RESPONCE -->', response)\n              // otetaan kaikki paitsi negaation id mukaan\n              setPersons(persons.filter(person => person.id !==id))\n              SetErrorMessage(`\"${person.name}\" removed from phonebook`)\n              setErrorColor('ok')\n              setTimeout(() => {\n                SetErrorMessage(null)}, 5000)\n          })\n    }\n  }\n\n  const handleNameChange = (event) => {\n      console.log(event.target.value)\n      setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setFilter(event.target.value)\n  }\n\n  useEffect (() => {\n    console.log('effect')\n    Server\n      .getAll()\n      .then(response => {\n        console.log('promise fulfilled')\n        setPersons(response.data)\n      })\n  }, [])\n  console.log('renderöity', persons.length, 'kpl')\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <Notification message={errorMessage} type={errorColor}/>\n        <Filter handleFilterChange={handleFilterChange}/>\n\n      <h2>Add a new</h2>\n        <PersonForm addRecod={addRecod} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange}/>\n      \n      <h2>Numbers</h2>\n      <ul>\n        <PersonsToShow handleDelete={handleDelete} persons={persons} setPersons={setPersons} filter={filter}/>\n      </ul>\n    </div>\n  )\n    // vaihtoehto, jos haluaa kaikkien nimet näkyville\n    // {persons.map(person => <li key={person.name}>{person.name} {person.number}</li>)}\n}\n\nexport default App\n\n\n// tehty 2.6 - 2.10\n//      2.11\n//      2.15 - 2.18\n//      2.19 - 2.20","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}